{"name":"Motion-awesome","tagline":"as if more awesomeness was needed...","body":"# MotionAwesome\r\n\r\nFontAwesome (http://fortawesome.github.io/Font-Awesome) is a really cool way to bring in some \r\nlow cost bang! to your web applications. \r\nFollowing on that lead, MotionAwesome brings similar awesomeness in the RubyMotion world...\r\n \r\n \r\n## RM star-gizzards ;-)\r\n\r\n```\r\n> git clone https://github.com/derailed/motion-awesome.git\r\n> cd motion-awesome\r\n> rake\r\n```\r\n\r\n## Installation\r\n\r\n```\r\ngem install 'motion-awesome'\r\n```\r\n\r\n## Dependencies\r\n\r\n- motion-map [https://github.com/derailed/motion-map]\r\n\r\n## Usage\r\n\r\n### Creating awesome labels\r\n\r\n```ruby\r\nclass WannaBeCoolController < XXXController\r\n  include MotionAwesome\r\n  \r\n  def viewDidLoad\r\n    label( :flag, size: 200 ) do |label|\r\n      self.view.addSubview(label)\r\n    end\r\n  end\r\nend\r\n```\r\n\r\n### Creating awesome buttons\r\n\r\n```ruby\r\nclass WannaBeCoolController < XXXController\r\n  include MotionAwesome\r\n  \r\n  def viewDidLoad\r\n    button( :legal, size: 40, text:%q{Hit me!} ) do |button|\r\n      button.titleLabel.textColor = 0xFB3223.uicolor\r\n      button.titleLabel.font      = UIFont.fontWithName( 'GillSans', size:30 )\r\n      button.addTarget( self,\r\n                        action: \"cb:\",\r\n                        forControlEvents: UIControlEventTouchUpInside )\r\n      self.view.addSubview( button )\r\n  end\r\nend\r\n```\r\n\r\n## Settings\r\n\r\n\r\n### What's my name?\r\n\r\nWith MotionAwesome you have access to all the latest icons available on the FontAwesome site.\r\n\r\nIn order to specify the icon name you can use a symbol for the name minus the 'icon-' prefix and\r\nsub out the '-' with '_'. Simple!\r\n\r\n```\r\nFontAwesome     => MotionAwesome\r\nicon-flag       => :flag\r\nicon-star-empty => :star_empty\r\n```\r\n\r\n### Options\r\n\r\nAwesomization is currently in effect for UILabel and UIButton. \r\n\r\nThe method signatures following this strategy:\r\n\r\n```ruby\r\n awesome_label  = label( :icon_name, opts ) do {|comp| ... }\r\n awesome_button = button( :icon_name, opts ) do {|comp| ... } \r\n```\r\n\r\nOptions are as follows:\r\n\r\n+ size:  specifies the size of the icon. To size the text portion you can set the font of your liking.\r\n         If no size is specified the icon will be sized according to the active font size.\r\n+ type:  :custom | :rounded. Specifies the type of UIButton to create -- For button only! - \r\n+ text:  prepends some text to your decorated label or button.\r\n+ color: sets the icon color. If this is not set the icon color will match the text color if specified.\r\n\r\n\r\n## ATTA BOYS!\r\n\r\nThis gem was inspired by Hiroshi Horiki(@pchw) https://github.com/pchw/fontawesome\r\n\r\n\r\n## Contact\r\n\r\nFernand Galiana\r\n\r\n- http://github.com/derailed\r\n- http://twitter.com/kitesurfer\r\n- <fernand.galiana@gmail.com>\r\n\r\nStill work in progress. So please feel to fork or contact me if you run into issues or\r\njust want to touch base...\r\n\r\n\r\n## License\r\n\r\nMotionAwesome is released under the [MIT](http://opensource.org/licenses/MIT) license.\r\n\r\n\r\n## History\r\n  + 0.0.1:\r\n    + Initial drop","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}